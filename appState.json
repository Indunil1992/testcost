{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "3e66b977-5cc8-42e7-bc0a-dcfcbc114b14": {
        "id": "3e66b977-5cc8-42e7-bc0a-dcfcbc114b14",
        "parent": null,
        "name": "testcost",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "d455292d-13fd-4a20-b4b7-d85d014805c7"
        ],
        "isRemovable": false,
        "filePath": "testcost"
      },
      "d455292d-13fd-4a20-b4b7-d85d014805c7": {
        "id": "d455292d-13fd-4a20-b4b7-d85d014805c7",
        "parent": "3e66b977-5cc8-42e7-bc0a-dcfcbc114b14",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "testcost/lambda.js",
        "code": "let AWS = require('aws-sdk');\nconst sns = new AWS.SNS();\nconst s3 = new AWS.S3();\n\nexports.handler = function (event, context, callback) {\n    s3.listObjects({\n        'Bucket': 'indunil.trigger',\n        'MaxKeys': 10,\n        'Prefix': ''\n    }).promise()\n        .then(data => {\n            console.log(data);           // successful response\n            /*\n            data = {\n                Contents: [\n                    {\n                       ETag: \"\\\"70ee1738b6b21e2c8a43f3a5ab0eee71\\\"\",\n                       Key: \"example1.jpg\",\n                       LastModified: \"<Date Representation>\",\n                       Owner: {\n                          DisplayName: \"myname\",\n                          ID: \"12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n                       },\n                       Size: 11,\n                       StorageClass: \"STANDARD\"\n                    },\n                    // {...}\n                ]\n            }\n            */\n        })\n        .catch(err => {\n            console.log(err, err.stack); // an error occurred\n        });\n\n    sns.listSubscriptionsByTopic({\n        TopicArn: 'arn:aws:sns:us-east-1:318300609668:TestSNS'\n    }).promise()\n        .then(data => {\n            // your code goes here\n        })\n        .catch(err => {\n            // error handling goes here\n        });\n\n    callback(null, { \"message\": \"Successfully executed\" });\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "apigusEast1sachithraAPInamehiruidneeany",
            "config": {}
          }
        ]
      }
    },
    "rootNode": "3e66b977-5cc8-42e7-bc0a-dcfcbc114b14",
    "openFiles": [
      "d455292d-13fd-4a20-b4b7-d85d014805c7"
    ],
    "currentFileId": "d455292d-13fd-4a20-b4b7-d85d014805c7",
    "resources": {
      "apigusEast1sachithraAPInamehiruidneeany": {
        "name": "apigusEast1sachithraAPInamehiruidneeany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 1,
          "apiName": "sachithraAPIname",
          "apiId": "052p9kjn18",
          "endpointType": "REGIONAL",
          "rootResourceId": "zrjp6rdv3b",
          "existingResources": {
            "/hiruidnee": "mdiuqa",
            "/": "zrjp6rdv3b"
          },
          "resourceMode": 1,
          "resourcePath": "/hiruidnee",
          "resourceName": "hiruidnee",
          "resourceId": "mdiuqa",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "enableCORS": false,
          "stageMode": 1,
          "stageName": "Test808",
          "stageDeploymentId": "a54lpi",
          "mode": 1
        }
      },
      "s3induniltrigger": {
        "name": "s3induniltrigger",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-1",
            "name": "indunil.trigger"
          }
        }
      },
      "snsusEast1TestSNS": {
        "name": "snsusEast1TestSNS",
        "type": "SNS",
        "config": {
          "topicMode": 1,
          "topicName": "TestSNS",
          "topicArn": "arn:aws:sns:us-east-1:318300609668:TestSNS",
          "topicRegion": "us-east-1",
          "snsType": 0,
          "subscriptions": []
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": null
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "testcost",
    "projectDescription": "",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-1",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1570449705983
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "testcost",
      "url": "https://github.com/Indunil1992/testcost"
    }
  }
}